using Microsoft.CSharp;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using UnityEditor;
using UnityEngine;

public class SheetDataGenerator
{
    static string SPLIT_RE = @",(?=(?:[^""]*""[^""]*"")*(?![^""]*""))";
    static string LINE_SPLIT_RE = @"\r\n|\n\r|\n|\r";
    static char[] TRIM_CHARS = { '\"' };

    public static void GenerateClass(string csvString, string className)
    {
        var lines = Regex.Split(csvString, LINE_SPLIT_RE);

        var dataTypes = Regex.Split(lines[0], SPLIT_RE);

        int dataNameLine = 0;
        for (var i = 1; i < lines.Length; i++)
        {
            var values = Regex.Split(lines[i], SPLIT_RE);
            if (values[0].Equals("data_start") == true)
            {
                dataNameLine = i + 1;
                break;
            }
        }

        var dataNames = Regex.Split(lines[dataNameLine], SPLIT_RE);

        //Debug.Log(dataTypes);
        //Debug.Log(dataNames);

        if (dataTypes.Length != dataNames.Length)
        {
            Debug.LogError("csv 구조 오류 감지");
            return;
        }

        CSharpCodeProvider cs = new CSharpCodeProvider();
        var contents = new StringBuilder();
        contents.AppendLine("// <auto-generated>");
        contents.AppendLine("// 이 파일은 자동 생성되었으므로 함부로 편집하지 마세요.");
        contents.AppendLine("// </auto-generated>");
        contents.AppendLine();
        contents.AppendLine();
        contents.AppendLine($"public partial class {className}");
        contents.AppendLine("{");

        for (int i = 0; i < dataTypes.Length; ++i)
        {
            var curType = dataTypes[i];
            var curName = dataNames[i];

            if (curName == "desc" || curName == "name" || curName == "비고")
            {
                continue;
            }

            if (curType == "short" || curType == "byte")
            {
                curType = "int";
            }
            else if (curType != "int")
            {
                curType = "string";
            }

            if (cs.IsValidIdentifier(curName))
            {
                contents.AppendLine($"    public {curType} {curName};");
            }
            else
            {
                contents.AppendLine($"    public {curType} @{curName};");
            }
        }
        contents.AppendLine("}");

        //Debug.Log(contents.ToString());
        var filePath = $"Assets/Scripts/Table/AutoGenerated/{className}.cs";
        var dirPath = Path.GetDirectoryName(filePath);
        if (!Directory.Exists(dirPath))
        {
            Directory.CreateDirectory(dirPath);
        }
        File.WriteAllText(filePath, contents.ToString());
    }
}
